plugins {
  id 'java'
  id 'application'
  id 'distribution'
}

// If running the project, make sure to build the native .dll and set its path as a java library path.
run {
  dependsOn project(':aiRandomMove').build
  doFirst {
    systemProperty "java.library.path", "${project(':aiRandomMove').buildDir}/libs/aiRandomMove/shared"
  }
}

// Before creating a .zip, make sure the native .dll is built and then include it in the .zip
// copying it to the same directory as the executable should remove the need to set a library path.
distZip.dependsOn project(':aiRandomMove').build

distributions {
  main {
    baseName = 'RobotArenaDist'
    contents {
      into ('bin') {
        from "${project(':aiRandomMove').buildDir}/libs/aiRandomMove/shared"
      }
    }
  }
}

dependencies{
  implementation project(':aiDependencies'), project(':aiDefault'), project(':aiRandomMove'), project(':aiSeeker'), project(':aiHitAndRunner'), project(':aiTagger')
}

jar {
  manifest {
    attributes 'Main-Class': 'robotarena.RobotArenaApp'
  }
  into 'resources', {
    from 'resources'
  }
}

application {
  mainClassName = 'robotarena.RobotArenaApp'
}
